@prefix my-rule: <http://example.com/change-me/ascoli-piceno#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ex: <http://example.org/> .
@prefix chek: <urn:chek:vocab/> .
@prefix city: <http://example.com/vocab/city/> .
@prefix attr: <http://example.com/vocab/city/attr#> .

ex: a owl:Ontology ;
owl:imports sh: ;
sh:declare [ sh:namespace "urn:chek:vocab/"^^xsd:anyURI ;
    sh:prefix "chek" ],
[ sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI ;
    sh:prefix "dct" ],
[ sh:namespace "http://example.com/vocab/city/"^^xsd:anyURI ;
    sh:prefix "city" ],
[ sh:namespace "https://w3id.org/okn/o/sd#"^^xsd:anyURI ;
    sh:prefix "sd" ],
[ sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
    sh:prefix "rdfs" ],
[ sh:namespace "http://example.com/vocab/city/attr#"^^xsd:anyURI ;
    sh:prefix "attr" ],
[ sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
    sh:prefix "rdf" ] .

my-rule:BuildingOfInterestPresent
  a sh:NodeShape ;
  sh:targetClass chek:document ;
  sh:sparql [
    sh:prefixes ex: ;
    sh:select """
      SELECT $this (rdf:type as ?path) (?buildingOfInterestValue as ?value) WHERE {
        ?buildingOfInterestParam a sd:Parameter ;
          dct:identifier "buildingOfInterest" ;
          sd:hasFixedValue ?buildingOfInterestValue ;
        .
        FILTER NOT EXISTS {
          ?dataset city:hasObject/dct:identifier ?buildingOfInterestValue
        }
      }
    """ ;
  ] ;
  sh:message "Building of interest not found in dataset" ;
  sh:severity sh:Violation ;
.

my-rule:BuildingOfInterestRequirements
  a sh:NodeShape ;
  sh:targetClass chek:document ;
  sh:sparql [
    sh:prefixes ex: ;
    sh:select """
      SELECT ?buildingOfInterest (?value as ?path) ?value ?req WHERE {
        ?buildingOfInterestParam a sd:Parameter ;
          dct:identifier "buildingOfInterest" ;
          sd:hasFixedValue ?buildingOfInterestValue ;
        .
        ?dataset city:hasObject ?buildingOfInterest .
        ?buildingOfInterest dct:identifier ?buildingOfInterestValue .
        {
          FILTER NOT EXISTS {
            ?buildingOfInterest city:hasGeometry ?geometry .
            ?geometry city:hasSurface/rdf:type city:RoofSurface ;
              city:lod ?lod .
            FILTER(REGEX(?lod, "^[234].*"))
          }
          BIND(city:RoofSurface as ?value)
          BIND("RoofSurface with LoD 2+" as ?req)
        } UNION {
          FILTER NOT EXISTS {
            ?buildingOfInterest city:hasGeometry ?geometry .
            ?geometry city:hasSurface/rdf:type city:WallSurface ;
              city:lod ?lod .
            FILTER(REGEX(?lod, "^[34].[1-4]"))
          }
          BIND(city:WallSurface as ?value)
          BIND("WallSurface with LoD 3.1+" as ?req)
        } UNION {
          FILTER NOT EXISTS {
            ?buildingOfInterest city:hasGeometry/city:hasSurface ?surface .
            ?surface a city:WallSurface ;
              attr:hasWindows ?hasWindows .
            FILTER(?hasWindows IN (1, "true", true))
          }
          BIND(city:WallSurface as ?value)
          BIND("WallSurface with attribute hasWindows = true or 1" as ?req)
        }
      }
    """ ;
  ] ;
  sh:message "Building of interest does not satisfy requirement: {?req}" ;
  sh:severity sh:Violation ;
.

my-rule:BuildingsPresent
    a sh:NodeShape ;
    sh:targetClass chek:document ;
    sh:description "Checks that at least one building that is not the building of interest exists" ;
    sh:not [
        sh:sparql [
          sh:prefixes ex: ;
          sh:select """
            SELECT $this (rdf:type as ?path) (city:Building as ?value) WHERE {
              ?buildingOfInterestParam a sd:Parameter ;
                dct:identifier "buildingOfInterest" ;
                sd:hasFixedValue ?buildingOfInterestValue ;
              .
              ?s a city:Building ; dct:identifier ?identifier .
              FILTER(?identifier != ?buildingOfInterestValue)
            } LIMIT 1
        """ ;
        ] ;
      ] ;
    sh:message "Dataset contains no Building objects" ;
    sh:severity sh:Violation ;
.

my-rule:ExistingBuildingRequirements
  a sh:NodeShape ;
  sh:targetClass city:Building ;
  sh:sparql [
    sh:prefixes ex: ;
    sh:select """
      SELECT $this (?value as ?path) ?value ?req WHERE {
        {
          # Fa√ßade LoD 3.1+
          FILTER NOT EXISTS {
            $this city:hasGeometry ?geometry .
            ?geometry city:hasSurface/rdf:type city:WallSurface ;
              city:lod ?lod .
            FILTER(REGEX(?lod, "^[34].[1-4]"))
          }
          BIND(city:WallSurface as ?value)
          BIND("WallSurface with LoD 3.1+" as ?req)
        } UNION {
          # hasWindows
          FILTER NOT EXISTS {
            $this city:hasGeometry/city:hasSurface ?surface .
            ?surface a city:WallSurface ;
              attr:hasWindows ?hasWindows .
            FILTER(?hasWindows IN (1, "true", true))
          }
          BIND(city:WallSurface as ?value)
          BIND("WallSurface with attribute hasWindows = true or 1" as ?req)
        } UNION {
          # legalHeight
          FILTER NOT EXISTS {
            $this attr:legalHeight ?legalHeight
          }
          BIND(city:Object as ?value)
          BIND("Building legalHeight missing" as ?req)
        } UNION {
          # legalVolume
          FILTER NOT EXISTS {
            $this attr:legalVolume ?legalVolume
          }
          BIND(city:Object as ?value)
          BIND("Building legalVolume missing" as ?req)
        }
      }
    """ ;
  ] ;
  sh:message "Building of interest does not satisfy requirement: {?req}" ;
  sh:severity sh:Violation ;
.